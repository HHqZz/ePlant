/// <reference types="react" />
import * as RMWC from '@rmwc/types';
export declare type IconButtonOnChangeEventT = RMWC.CustomEventT<{
    isOn: boolean;
}>;
/** An IconButton component that can also be used as a toggle. */
export interface IconButtonProps extends RMWC.WithRippleProps {
    /** Controls the on / off state of the a toggleable button. */
    checked?: boolean;
    /** An onChange callback that receives a custom event. evt.detail = { isOn: boolean } */
    onChange?: (evt: IconButtonOnChangeEventT) => void;
    /** Makes the button disabled */
    disabled?: boolean;
    /** Icon for the button */
    icon?: RMWC.IconPropT;
    /** If specified, renders a toggle with this icon as the on state. */
    onIcon?: RMWC.IconPropT;
}
export interface DeprecatedIconButtonProps {
    /** DEPRECATED: Pass options directly to icon */
    iconOptions?: any;
    /** DEPRECATED: Pass options directly to onIcon */
    onIconOptions?: any;
}
/** An IconButton component that can also be used as a toggle. */
export declare const IconButton: {
    ({ ...rest }: IconButtonProps & RMWC.ComponentProps): JSX.Element;
    displayName: string;
};
